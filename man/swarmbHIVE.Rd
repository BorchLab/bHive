% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/swarmbHIVE.R
\name{swarmbHIVE}
\alias{swarmbHIVE}
\title{Tune Hyperparameters for bHIVE}
\usage{
swarmbHIVE(
  X,
  y = NULL,
  task = "clustering",
  grid,
  metric = "silhouette",
  verbose = TRUE,
  seed = NULL
)
}
\arguments{
\item{X}{A numeric matrix or data frame of input features, with rows as observations 
and columns as features.}

\item{y}{Optional. A target vector. Use for classification (factor) or regression (numeric).
If NULL, clustering will be performed.}

\item{task}{Character. Specifies the task to perform: \code{"clustering"}, \code{"classification"}, 
or \code{"regression"}.}

\item{grid}{A data frame specifying the hyperparameter combinations to evaluate. 
Should include columns \code{nAntibodies}, \code{beta}, and \code{epsilon}.}

\item{metric}{Character. The evaluation metric to use for selecting the best hyperparameters. 
Options are:
\itemize{
  \item \code{"accuracy"}: For classification tasks.
  \item \code{"rmse"}: For regression tasks.
  \item \code{"silhouette"}: For clustering tasks.
}}

\item{verbose}{Logical. If \code{TRUE}, prints progress messages.}

\item{seed}{Integer. Random seed for reproducibility.}
}
\value{
A list containing:
  \itemize{
    \item \code{best_params}: A list of the best hyperparameters.
    \item \code{results}: A data frame with the grid search results, including 
      the performance metric for each combination.
  }
}
\description{
Performs hyperparameter tuning for the bHIVE algorithm using grid search. 
The function evaluates multiple combinations of hyperparameters to find the 
best parameters based on a user-defined evaluation metric.
}
\examples{
# Load Iris dataset
data(iris)
X <- as.matrix(iris[, 1:4])  # Features
y <- iris$Species            # Labels for classification

# Define hyperparameter grid
grid <- expand.grid(
  nAntibodies = c(10, 20, 30),
  beta = c(3, 5, 7),
  epsilon = c(0.01, 0.05, 0.1)
)

# Perform hyperparameter tuning for classification
tuning_results <- swarmbHIVE(X = X, 
                            y = y,
                             task = "classification", 
                             grid = grid, 
                             metric = "accuracy")

# Best parameters
print(tuning_results$best_params)
}
